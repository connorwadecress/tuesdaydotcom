@using global::ProjectTracker.Domain.Entities
@using global::ProjectTracker.Application.Services
@using MudBlazor

<MudPaper Class="pa-2 my-2" Elevation="2" Style="cursor: grab;" @oncontextmenu:preventDefault>
    <MudText Typo="Typo.subtitle2">@Issue.Name</MudText>
    <MudText Typo="Typo.caption">@Issue.Description</MudText>
</MudPaper>

@code {
    [Parameter] public Issue Issue { get; set; }
    [Parameter] public Group Group { get; set; }
    [Parameter] public EventCallback<(Issue issue, Group targetGroup)> OnMove { get; set; }

    // Placeholder: Implement drag-and-drop in next phase
}

<MudSelect @bind-Value="selectedGroupId" Label="Move to" Dense>
    @foreach (var g in AllGroups)
    {
        <MudSelectItem Value="@g.Id">@g.Name</MudSelectItem>
    }
</MudSelect>

<MudButton OnClick="Move">Move</MudButton>

@code {
    [Parameter] public List<Group> AllGroups { get; set; }
    private int selectedGroupId;

    private async Task Move()
    {
        var target = AllGroups.FirstOrDefault(g => g.Id == selectedGroupId);
        if (target != null)
            await OnMove.InvokeAsync((Issue, target));
    }
}
