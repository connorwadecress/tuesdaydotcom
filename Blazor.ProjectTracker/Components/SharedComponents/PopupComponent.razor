@page "/create-project"
@rendermode InteractiveServer

<h2>Create a Project</h2>

<div class="popup-container">
    <div class="popup-body">
        <div class="form-group">
            <label for="project-name">Name</label>
            <input type="text" id="project-name" class="form-control" @bind="ProjectName" />
        </div>

        <div class="form-group">
            <label for="project-description">Description</label>
            <textarea id="project-description" class="form-control" rows="5" @bind="ProjectDescription"></textarea>
        </div>

        <div class="form-row">
            <div class="form-group half-width">
                <label for="project-status">Status</label>
                <select id="project-status" class="form-control" @bind="ProjectStatus">
                    <option value="Proposed">Proposed</option>
                    <option value="In Progress">In Progress</option>
                    <option value="On Hold">On Hold</option>
                    <option value="Completed">Completed</option>
                </select>
            </div>

            <div class="form-group half-width">
                <label for="deadline-date">Deadline Date</label>
                <div class="date-input-wrapper">
                    <input type="date" id="deadline-date" class="form-control" @bind="DeadlineDate" />
                    <span class="calendar-icon">
                        <!-- SVG calendar icon -->
                    </span>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="tag-dropdown">
                <select id="project-tag" class="form-control" @bind="SelectedTag">
                    <option value="">Add a Tag</option>
                    <option value="Development">Development</option>
                    <option value="Design">Design</option>
                    <option value="Marketing">Marketing</option>
                    <option value="Research">Research</option>
                </select>
            </div>
        </div>

        <div class="tag-list">
            @foreach (var tag in Tags)
            {
                <div class="tag">
                    @tag
                    <button class="remove-tag" @onclick="@(() => RemoveTag(tag))">×</button>
                </div>
            }
        </div>

        <div class="form-actions">
            <button class="cancel-button" @onclick="Cancel">Cancel</button>
            <button class="create-button" @onclick="CreateProject">Create</button>
        </div>

    </div>
</div>

<style>
    .popup-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

        .popup-overlay.hidden {
            display: none;
        }

    .popup-container {
        background-color: #333;
        border-radius: 8px;
        width: 100%;
        max-width: 500px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        color: white;
    }

    .popup-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 15px 20px;
        border-bottom: 1px solid #444;
    }

        .popup-header h2 {
            margin: 0;
            font-size: 1.25rem;
        }

    .close-button {
        background: none;
        border: none;
        color: #aaa;
        font-size: 1.5rem;
        cursor: pointer;
    }

        .close-button:hover {
            color: white;
        }

    .popup-body {
        padding: 20px;
    }

    .form-group {
        margin-bottom: 20px;
    }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
        }

    .form-control {
        width: 100%;
        padding: 10px 12px;
        border-radius: 4px;
        border: none;
        background-color: #444;
        color: white;
    }

    textarea.form-control {
        resize: vertical;
        min-height: 100px;
    }

    .form-row {
        display: flex;
        gap: 15px;
    }

    .half-width {
        flex: 1;
    }

    .date-input-wrapper {
        position: relative;
    }

    .calendar-icon {
        position: absolute;
        right: 12px;
        top: 50%;
        transform: translateY(-50%);
        color: #aaa;
        pointer-events: none;
    }

    .tag-dropdown {
        margin-bottom: 10px;
    }

    .tag-list {
        display: flex;
        flex-wrap: wrap;
        gap: 8px;
        margin-bottom: 20px;
    }

    .tag {
        display: flex;
        align-items: center;
        gap: 5px;
        background-color: #4a4a4a;
        padding: 4px 10px;
        border-radius: 20px;
        font-size: 0.9rem;
    }

    .remove-tag {
        background: none;
        border: none;
        color: #ccc;
        font-size: 1rem;
        cursor: pointer;
        padding: 0;
        display: flex;
        align-items: center;
    }

    .form-actions {
        display: flex;
        justify-content: flex-end;
    }

    .create-button {
        background-color: #3949ab;
        color: white;
        border: none;
        border-radius: 4px;
        padding: 10px 24px;
        font-weight: 500;
        cursor: pointer;
    }

        .create-button:hover {
            background-color: #303f9f;
        }

    .cancel-button {
        background-color: #888;
        color: white;
        border: none;
        border-radius: 4px;
        padding: 10px 24px;
        font-weight: 500;
        cursor: pointer;
        margin-right: 10px;
    }

        .cancel-button:hover {
            background-color: #777;
        }
</style>

@code {
    @inject NavigationManager Navigation

    private string ProjectName { get; set; } = "";
    private string ProjectDescription { get; set; } = "";
    private string ProjectStatus { get; set; } = "Proposed";
    private DateTime? DeadlineDate { get; set; }
    private string SelectedTag { get; set; } = "";
    private List<string> Tags { get; set; } = new List<string>();
    private List<Tag> dbTags { get; set; } = [new Tag { Name = "efcore" }, new Tag { Name = "gaming" }];

    private void RemoveTag(string tag)
    {
        Tags.Remove(tag);
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/");
    }

    private void AddTag()
    {
        if (!string.IsNullOrWhiteSpace(SelectedTag) && !Tags.Contains(SelectedTag))
        {
            Tags.Add(SelectedTag);
            SelectedTag = "";
        }
    }

    protected override void OnParametersSet()
    {
        if (!string.IsNullOrWhiteSpace(SelectedTag))
        {
            AddTag();
        }
    }

    private void CreateProject()
    {
        var newTag = dbTags.FirstOrDefault(tag => tag.Name == SelectedTag);
        var project = new Project
        {
            Name = ProjectName,
            Description = ProjectDescription,
            Status = ProjectStatus,
            DeadlineDate = DeadlineDate,
            Tags = newTag is not null ? new List<Tag> { newTag } : new List<Tag>()
        };

        // Add saving logic here

        // Reset form
        ProjectName = "";
        ProjectDescription = "";
        ProjectStatus = "Proposed";
        DeadlineDate = null;
        Tags.Clear();
        Navigation.NavigateTo("/");
    }
}